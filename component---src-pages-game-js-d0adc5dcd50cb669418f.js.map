{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///./src/pages/game.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///./node_modules/round-to/index.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableRest.js"],"names":["arrayWithHoles","iterableToArrayLimit","nonIterableRest","module","exports","arr","i","GamePage","useState","useSelector","state","game","height","centerBlocks","width","loading","rocket","blocksLine","resultMessage","wall","raw","endScreen","dispatch","useDispatch","useInterval","length","moveLineDown","useEffect","setDimensions","window","innerWidth","innerHeight","firstCenterBlock","end","title","class","style","zIndex","backgroundColor","position","top","left","transform","type","onClick","clearResultsMessage","yellow","red","blue","green","start","display","justifyContent","marginTop","to","startLine","gender","age","expressions","happy","blockSize","map","a","key","x","y","colour","rotation","b","roundTo","flexDirection","alignContent","alignItems","marginBottom","marginLeft","results","temp","forEach","push","setLoading","console","log","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","value","err","_slicedToArray","round","method","number","precision","TypeError","Number","isInteger","exponent","isRoundingAndNegative","Math","abs","_$split","concat","split","_$split2","result","_$split3","_$split4","bind","up","down","Array","isArray"],"mappings":"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","file":"component---src-pages-game-js-d0adc5dcd50cb669418f.js","sourcesContent":["var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","import React, { useEffect, useState } from \"react\"\nimport { Link } from \"gatsby\"\n// import {useIn}\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\nimport Block from \"../components/block\"\nimport { useInterval, blockSize } from \"../components/utils\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n  addBlock,\n  setDimensions,\n  firstCenterBlock,\n  setRocket,\n  start,\n  startLine,\n  moveLineDown,\n  setLoading,\n  end,\n  clearResultsMessage\n} from \"../store/store\"\nimport roundTo from 'round-to'\nimport FaceThing from \"../components/faceThing\"\nimport SimpleBlock from \"../components/simpleBlock\"\nconst GamePage = () => {\n  // const [w, setW] = useState(300)\n  const [currentRotation, setCurrentRotation] = useState(0)\n\n  // const [startX, setStartX] = useState(3)\n  // const [startY, setStartY] = useState(1)\n\n  // const [rocket, setRocket] = useState(200000)\n\n  const {\n    centerBlocks,\n    width,\n    height,\n    rocket,\n    loading,\n    blocksLine,\n    resultMessage,\n    wall,\n    raw,\n    endScreen\n  } = useSelector(state => state.game)\n  const dispatch = useDispatch()\n\n  useInterval(() => {\n    // setStartY(startY+1)\n    // console.log('rocket.y', rocket.y)\n    // dispatch(setRocket({x: width/2, y: rocket.y-10, colour: 'green'}))\n    if (blocksLine && blocksLine.length > 0) {\n      dispatch(moveLineDown())\n    }\n  }, 200)\n\n  useInterval(() => {\n    // dispatch(setRocket({x: width/2, y: rocket.y-10, colour: 'green'}))\n    // setCurrentRotation(currentRotation+5)\n  }, 500)\n\n  useEffect(() => {\n    // setW(window.innerWidth)\n    // setH(window.innerHeight)\n    dispatch(\n      setDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight < 400 ? window.innerHeight : 600,\n      })\n    )\n    // setStartX(window.innerWidth/2)\n    // setStartY(window.innerHeight)\n\n    dispatch(firstCenterBlock())\n  }, [])\n\n  useEffect(() => {\n    if (wall && wall.length === 6) {\n      dispatch(end())\n    }\n  }, [wall])\n\n  // useEffect(()=>{\n  //   setInterval(() => {\n  //     setStartY(startY+1)\n  //   }, 200);\n  //   // if(startY === h){\n  //   //   setStartY(0)\n  //   // }\n  // }, [startY])\n\n  const doKeyDown = event => {\n    // if(event.code === \"Space\"){\n    //   console.log('space hit', startY)\n    //   const newVal = startY-1\n    //   console.log('new val', newVal)\n    //   setStartY(newVal)\n    // }\n    // console.log('keydown', event.code)\n  }\n\n  // useEffect(() => {\n  //   window.addEventListener('keydown', doKeyDown)\n  //   return () => window.removeEventListener('keydown', doKeyDown)\n  // }, [startY])\n\n  return (\n    <Layout>\n      {/* {console.log('current centerBlocks', centerBlocks)} */}\n\n      <SEO title=\"Game\" />\n      <>\n        {(loading || resultMessage) && (\n          <div\n            class=\"nes-container is-rounded\"\n            style={{\n              zIndex: 10000,\n              backgroundColor: \"white\",\n              position: \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              transform: \"translate(-50%, -50%)\",\n            }}\n          >\n            {loading && <h2>{loading}</h2>}\n            {resultMessage && <div><h2>{resultMessage}</h2>     <button\n              type=\"button\"\n              class=\"nes-btn is-primary\"\n              onClick={() => dispatch(clearResultsMessage())}\n            >\n              Ok\n            </button></div>}\n          </div>\n        )}\n                {endScreen && (\n          <div\n            class=\"nes-container is-rounded\"\n            style={{\n              zIndex: 10000,\n              backgroundColor: \"white\",\n              position: \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              transform: \"translate(-50%, -50%)\",\n            }}\n          >\n              <h3>Done, does your wall look cool? Is it colourful?</h3>\n              <p>Yellow Blocks: {endScreen.yellow?endScreen.yellow<6?`Only ${endScreen.yellow}`:endScreen.yellow:'Wow none bad!!'}</p>\n              <p>Red Blocks: {endScreen.red?endScreen.red<6?`Only ${endScreen.red}`:endScreen.red:'Wow none bad!!'}</p>\n              <p>Blue Blocks: {endScreen.blue?endScreen.blue<6?`Only ${endScreen.blue}`:endScreen.blue:'Wow none bad!!'}</p>\n              <p>Green Blocks: {endScreen.green?endScreen.green<6?`Only ${endScreen.green}`:endScreen.green:'Wow none bad!!'}</p>\n              <button\n              type=\"button\"\n              class=\"nes-btn is-success\"\n              onClick={() => dispatch(start())}\n            >\n              Try another\n            </button>\n\n          </div>\n        )}\n        <section style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n          {/* <h1>!</h1> */}\n\n          <div style={{ marginTop: \"10px\" }}>\n            <button\n              type=\"button\"\n              class=\"nes-btn is-success\"\n              onClick={() => dispatch(start())}\n            >\n              Restart\n            </button>{\" \"}\n            <Link to={\"/\"} class=\"nes-btn is-warning\">\n              Help\n            </Link>{\" \"}\n            <button\n              type=\"button\"\n              class=\"nes-btn is-normal\"\n              onClick={() => {\n                if (!blocksLine) {\n                  const temp = [\n                    { gender: \"male\", age: 10, expressions: { happy: 0.6111 } },\n                  ]\n                  dispatch(startLine(temp))\n                }\n              }}\n            >\n              test\n            </button>\n            {/* , width: `${20+(blockSize*5)}px`, height: `${(height-blockSize)}px`, marginLeft: `${blockSize-blockSize/2 -10}px` */}\n            <div\n              class=\"nes-container\"\n              style={{\n                position: \"absolute\",\n                width: `${20 + blockSize * 5}px`,\n                height: `${height - blockSize}px`,\n                marginTop: \"10px\",\n              }}\n            >\n              {blocksLine &&\n                blocksLine.map(a => (\n                  <Block\n                    key={`${a.x + a.y}`}\n                    x={a.x}\n                    y={a.y}\n                    colour={a.colour}\n                    rotation={0}\n                  />\n                ))}\n              {wall &&\n                wall.map(b =>\n                  b.map(a => (\n                    <Block\n                      key={`${a.x + a.y}`}\n                      x={a.x}\n                      y={a.y}\n                      colour={a.colour}\n                      rotation={0}\n                    />\n                  ))\n                )}\n            </div>\n                  {raw && <p style={{marginTop: `${height-20}px`}}>Found People: {raw.length} <br/>{raw.map((a, i)=><span key={i} >{a.gender}, happy:{roundTo(a.expressions.happy,3)}</span>)}</p>}\n\n          </div>\n          <div\n            style={{\n              marginTop: \"10px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <p\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                marginBottom: \"2px\",\n              }}\n            >\n              Happy + Female =\n              <span style={{ marginLeft: \"20px\" }}>\n                <SimpleBlock colour=\"yellow\" />\n              </span>\n            </p>\n            <p\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                marginBottom: \"2px\",\n              }}\n            >\n              Happy + Male =\n              <span style={{ marginLeft: \"20px\" }}>\n                {\" \"}\n                <SimpleBlock colour=\"red\" />\n              </span>\n            </p>\n            <p\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                marginBottom: \"2px\",\n              }}\n            >\n              Sad + Female ={\" \"}\n              <span style={{ marginLeft: \"20px\" }}>\n                <SimpleBlock colour=\"blue\" />\n              </span>\n            </p>\n            <p\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                marginBottom: \"2px\",\n              }}\n            >\n              Sad + Male ={\" \"}\n              <span style={{ marginLeft: \"20px\" }}>\n                <SimpleBlock colour=\"green\" />\n              </span>\n            </p>\n            <FaceThing\n              results={a => {\n                const temp = []\n                a.forEach(a => {\n                  temp.push({\n                    gender: a.gender,\n                    age: a.age,\n                    expressions: a.expressions,\n                  })\n                  // dispatch(startLine({array:[\n                  //   {gender: a.gender, }\n                  // ]}))\n                })\n                if (!blocksLine) {\n                  dispatch(startLine(temp))\n                  dispatch(setLoading(null))\n                } else {\n                  dispatch(setLoading(\"Wait for the wall to be built\"))\n                }\n                console.log(\"inside the thing\", a)\n              }}\n            />\n          </div>\n\n        </section>\n      </>\n    </Layout>\n  )\n}\n\nexport default GamePage\n","function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","'use strict';\n\nrequire(\"core-js/modules/es6.function.bind\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nvar _slicedToArray = require(\"/Users/geoffrey/Documents/Temp/train/train-gatsby/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.number.is-integer\");\n\nfunction round(method, number, precision) {\n  if (typeof number !== 'number') {\n    throw new TypeError('Expected value to be a number');\n  }\n\n  if (!Number.isInteger(precision)) {\n    throw new TypeError('Expected precision to be an integer');\n  }\n\n  var isRoundingAndNegative = method === 'round' && number < 0;\n\n  if (isRoundingAndNegative) {\n    number = Math.abs(number);\n  }\n\n  var exponent;\n\n  var _$split = \"\".concat(number, \"e\").split('e');\n\n  var _$split2 = _slicedToArray(_$split, 2);\n\n  number = _$split2[0];\n  exponent = _$split2[1];\n  var result = Math[method](\"\".concat(number, \"e\").concat(Number(exponent) + precision));\n\n  var _$split3 = \"\".concat(result, \"e\").split('e');\n\n  var _$split4 = _slicedToArray(_$split3, 2);\n\n  number = _$split4[0];\n  exponent = _$split4[1];\n  result = Number(\"\".concat(number, \"e\").concat(Number(exponent) - precision));\n\n  if (isRoundingAndNegative) {\n    result = -result;\n  }\n\n  return result;\n}\n\nmodule.exports = round.bind(null, 'round');\nmodule.exports.up = round.bind(null, 'ceil');\nmodule.exports.down = round.bind(null, 'floor');","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;"],"sourceRoot":""}