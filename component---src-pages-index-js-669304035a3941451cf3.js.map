{"version":3,"sources":["webpack:///./src/components/simpleBlock.js","webpack:///./src/pages/index.js"],"names":["SimpleBlock","x","y","colour","rotation","style","backgroundColor","width","blockSize","height","transform","lineHeight","fontSize","flexDirection","display","alignContent","justifyContent","charAt","IndexPage","useState","useSelector","state","game","centerBlocks","rocket","loading","blocksLine","resultMessage","wall","useDispatch","title","marginTop","class","to","href"],"mappings":"+MAoBeA,G,oBAdK,SAAC,GAAD,EAAGC,EAAH,EAAMC,EAAN,IAASC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,SAAjB,OAClB,yBACAC,MAAO,CACHC,gBAAiBH,EACjBI,MAAUC,IAAL,KACLC,OAAWD,IAAL,KACNE,UAAU,UAAWN,EAAZ,SAGf,0BAAMC,MAAO,CAACM,WAAeH,IAAL,KAAoBI,SAAaJ,IAAUA,IAAU,EAAzB,KAAgCK,cAAe,MAAOC,QAAS,OAAQC,aAAc,SAAUC,eAAgB,WAAYb,EAAOA,EAAOc,OAAO,GAAG,OC6FxLC,UAvFG,WAAM,MAEwBC,mBAAS,GAFjC,aAkBlBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAlBT,EAUpBC,aAVoB,EAWpBhB,MAXoB,EAYpBE,OAZoB,EAapBe,OAboB,EAcpBC,QAdoB,EAepBC,WAfoB,EAgBpBC,cAhBoB,EAiBpBC,KAEeC,cAOjB,OACE,kBAAC,IAAD,KAGE,kBAAC,IAAD,CAAKC,MAAM,SAEX,yBAAKzB,MAAO,CAAE0B,UAAW,SACvB,yBAAK1B,MAAO,CAAES,QAAS,OAAQE,eAAgB,WAC7C,kBAAC,EAAD,CAAab,OAAO,QACpB,kBAAC,EAAD,CAAaA,OAAO,UACpB,kBAAC,EAAD,CAAaA,OAAO,UAMtB,yBAAKE,MAAO,CAAE0B,UAAW,QAAUC,MAAM,4BACvC,8DAEF,yBAAK3B,MAAO,CAAE0B,UAAW,QAAUC,MAAM,4BACvC,4KAMF,yBACE3B,MAAO,CACL0B,UAAW,OACXjB,QAAS,OACTE,eAAgB,WAGlB,kBAAC,OAAD,CAAMiB,GAAI,SAAUD,MAAM,qBAAqBE,KAAK,KAApD,SAIF,6BAASF,MAAM,eAAe3B,MAAO,CAAC0B,UAAW,UAC/C,6BAASC,MAAM,iBACb,uBAAGA,MAAM,4BAA4B3B,MAAO,CAACK,UAAW,+BAExD,yBAAKsB,MAAM,yBACT","file":"component---src-pages-index-js-669304035a3941451cf3.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { blockSize } from \"./utils\"\n\n\nconst SimpleBlock = ({ x, y, colour, rotation }) => (\n  <div\n  style={{\n      backgroundColor: colour,\n      width: `${blockSize}px`,\n      height: `${blockSize}px`,\n      transform: `rotate(${rotation}deg)`\n  }}\n  >\n<span style={{lineHeight: `${blockSize}px`, fontSize: `${blockSize-blockSize/3}px`, flexDirection: 'row', display: 'flex', alignContent: 'center', justifyContent: 'center'}}>{colour?colour.charAt(0):\"\"}</span>\n    </div>\n)\n\n\nexport default SimpleBlock\n","import React, { useEffect, useState } from \"react\"\nimport { Link } from \"gatsby\"\n// import {useIn}\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\nimport Block from \"../components/block\"\nimport { useInterval, blockSize } from \"../components/utils\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n  addBlock,\n  setDimensions,\n  firstCenterBlock,\n  setRocket,\n  start,\n  startLine,\n  moveLineDown,\n  setLoading,\n} from \"../store/store\"\nimport FaceThing from \"../components/faceThing\"\nimport SimpleBlock from \"../components/simpleBlock\"\nconst IndexPage = () => {\n  // const [w, setW] = useState(300)\n  const [currentRotation, setCurrentRotation] = useState(0)\n\n  // const [startX, setStartX] = useState(3)\n  // const [startY, setStartY] = useState(1)\n\n  // const [rocket, setRocket] = useState(200000)\n\n  const {\n    centerBlocks,\n    width,\n    height,\n    rocket,\n    loading,\n    blocksLine,\n    resultMessage,\n    wall,\n  } = useSelector(state => state.game)\n  const dispatch = useDispatch()\n\n  // useEffect(() => {\n  //   window.addEventListener('keydown', doKeyDown)\n  //   return () => window.removeEventListener('keydown', doKeyDown)\n  // }, [startY])\n\n  return (\n    <Layout>\n      {/* {console.log('current centerBlocks', centerBlocks)} */}\n\n      <SEO title=\"Home\" />\n      \n      <div style={{ marginTop: \"50px\" }}>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <SimpleBlock colour=\"red\" />\n          <SimpleBlock colour=\"green\" />\n          <SimpleBlock colour=\"blue\" />\n        </div>\n        {/* <div style={{display: 'flex', alignContent: 'center', alignItems: 'center'}}>\n\n      Hi <i class=\"nes-icon trophy is-large\"></i>\n      </div> */}\n        <div style={{ marginTop: \"20px\" }} class=\"nes-container is-rounded\">\n          <p>Hi, lets make a colourful wall</p>\n        </div>\n        <div style={{ marginTop: \"20px\" }} class=\"nes-container is-rounded\">\n          <p>\n            With machine learning in the browser. You want the wall to be cool,\n            which means it should be random and colourful. Don't be \"colour\n            blind\".\n          </p>\n        </div>\n        <div\n          style={{\n            marginTop: \"20px\",\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Link to={\"/game/\"} class=\"nes-btn is-primary\" href=\"#\">\n            Game\n          </Link>\n        </div>\n        <section class=\"message-list\" style={{marginTop: '100px'}}>\n          <section class=\"message -left\">\n            <i class=\"nes-icon twitter is-large\" style={{transform: 'scale(4) translateY(25px)'}}></i>\n\n            <div class=\"nes-balloon from-left\">\n              <p>Sorry about graphics and etc..</p>\n            </div>\n          </section>\n        </section>\n      </div>\n\n      {/* r gender, g age, b expression */}\n\n      {/* <Block x={startX} y={startY} colour='red'/>\n    <Block x={50} y={90} colour='green'/>\n    <Block x={0} y={0} colour='orange'/>\n    <Block x={0} y={0} colour='blue'/>\n\n    <Block x={w-40} y={h-40} colour='blue'/> */}\n      {/* <button onClick={()=>setStartY(startY+1)}>click</button> */}\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}